{"version":3,"sources":["Header/index.js","Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","onClick","getRandomJoke","href","target","Main","joke","punchline","isLoading","isError","isPunchline","setIsPunchline","useEffect","App","useState","setJoke","setPunchLine","setIsLoading","setIsError","a","fetch","response","json","data","setup","console","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAsBeA,MApBf,SAAgBC,GACd,OACE,qCACE,yBAAQC,UAAU,SAAlB,UACE,wBAAQC,QAASF,EAAMG,cAAeF,UAAU,aAAhD,mCAGA,mBACEA,UAAU,cACVG,KAAK,gDACLC,OAAO,QAHT,8BAQF,qBAAKJ,UAAU,gBCgCNK,MA/Cf,YAQI,IAPFC,EAOC,EAPDA,KACAC,EAMC,EANDA,UACAC,EAKC,EALDA,UACAC,EAIC,EAJDA,QACAP,EAGC,EAHDA,cACAQ,EAEC,EAFDA,YACAC,EACC,EADDA,eAaA,OAHAC,qBAAU,WACRV,MACC,IAED,uBAAMF,UAAU,OAAhB,UACGS,GACC,mBAAGT,UAAU,aAAb,mDAEDQ,IAAcC,GACb,mBAAGT,UAAU,eAAb,mCAEAQ,GACA,gCACE,qBAAKR,UAAU,iBAAf,SACE,mBAAGA,UAAU,OAAb,SAAqBM,MAEvB,qBAAKN,UAAU,0BAAf,SACE,yBAAQC,QAzBlB,YACsB,IAAhBS,EACFC,GAAe,IACU,IAAhBD,GACTC,GAAe,IAqBuBX,UAAU,gBAA1C,UACGU,EAAc,wCAAoB,wCADrC,kBAIF,qBAAKV,UAAU,2BAAf,SACGU,GAAe,mBAAGV,UAAU,YAAb,SAA0BO,aCEvCM,MAvCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNR,EADM,KACAS,EADA,OAEqBD,mBAAS,IAF9B,mBAENP,EAFM,KAEKS,EAFL,OAGqBF,oBAAS,GAH9B,mBAGNN,EAHM,KAGKS,EAHL,OAIiBH,oBAAS,GAJ1B,mBAINL,EAJM,KAIGS,EAJH,OAKyBJ,oBAAS,GALlC,mBAKNJ,EALM,KAKOC,EALP,cAMET,IANF,2EAMb,8BAAAiB,EAAA,6DACED,GAAW,GACXD,GAAa,GAFf,SAIc,qDAJd,SAKyBG,MADX,sDAJd,cAKQC,EALR,gBAMqBA,EAASC,OAN9B,OAMQC,EANR,OAOIR,EAAQQ,EAAKC,OACbR,EAAaO,EAAKhB,WAClBU,GAAa,GATjB,kDAWIQ,QAAQC,MAAR,MACAR,GAAW,GAZf,2DANa,sBAsBb,OACE,sBAAKlB,UAAU,YAAf,UACE,cAAC,EAAD,CAAQE,cAAeA,IACvB,cAAC,EAAD,CACEI,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,QAASA,EACTC,YAAaA,EACbM,aAAcA,EACdd,cAAeA,EACfS,eAAgBA,QCzBTgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39b42e06.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(props) {\n  return (\n    <>\n      <header className='header'>\n        <button onClick={props.getRandomJoke} className='header-btn'>\n          Get a New Random Joke\n        </button>\n        <a\n          className='header-link'\n          href='https://github.com/15Dkatz/official_joke_api '\n          target='blank'\n        >\n          View API Docs\n        </a>\n      </header>\n      <div className='divider'></div>\n    </>\n  );\n}\n\nexport default Header;\n","import React, { useEffect } from 'react';\n\nfunction Main({\n  joke,\n  punchline,\n  isLoading,\n  isError,\n  getRandomJoke,\n  isPunchline,\n  setIsPunchline,\n}) {\n  function showPunchline() {\n    if (isPunchline === true) {\n      setIsPunchline(false);\n    } else if (isPunchline === false) {\n      setIsPunchline(true);\n    }\n  }\n\n  useEffect(() => {\n    getRandomJoke();\n  }, []);\n  return (\n    <main className='main'>\n      {isError && (\n        <p className='error-text'>There was an error loading your joke.</p>\n      )}\n      {isLoading && !isError && (\n        <p className='loading-text'>Loading your joke...</p>\n      )}\n      {!isLoading && (\n        <div>\n          <div className='joke-container'>\n            <p className='joke'>{joke}</p>\n          </div>\n          <div className='punchline-btn-container'>\n            <button onClick={showPunchline} className='punchline-btn'>\n              {isPunchline ? <span>Hide</span> : <span>Show</span>} Punchline\n            </button>\n          </div>\n          <div className='punchline-text-container'>\n            {isPunchline && <p className='punchline'>{punchline}</p>}\n          </div>\n        </div>\n      )}\n    </main>\n  );\n}\n\nexport default Main;\n","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\n\nfunction App() {\n  const [joke, setJoke] = useState('');\n  const [punchline, setPunchLine] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isPunchline, setIsPunchline] = useState(false);\n  async function getRandomJoke() {\n    setIsError(false);\n    setIsLoading(true);\n    try {\n      let url = 'https://official-joke-api.appspot.com/jokes/random';\n      let response = await fetch(url);\n      let data = await response.json();\n      setJoke(data.setup);\n      setPunchLine(data.punchline);\n      setIsLoading(false);\n    } catch (err) {\n      console.error(err);\n      setIsError(true);\n    }\n  }\n\n  return (\n    <div className='container'>\n      <Header getRandomJoke={getRandomJoke} />\n      <Main\n        joke={joke}\n        punchline={punchline}\n        isLoading={isLoading}\n        isError={isError}\n        isPunchline={isPunchline}\n        setPunchLine={setPunchLine}\n        getRandomJoke={getRandomJoke}\n        setIsPunchline={setIsPunchline}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}